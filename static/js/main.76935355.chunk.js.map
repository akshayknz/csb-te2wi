{"version":3,"sources":["serviceworker.js","components/Example.js","components/Home.js","components/About.js","components/Contact.js","components/Error.js","components/Navigation.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Example","motion","div","style","color","backgroundColor","padding","fontFamily","height","width","display","className","drag","dragConstraints","top","left","right","bottom","animate","scale","rotate","borderRadius","transition","duration","ease","times","loop","Infinity","repeatDelay","home","opacity","imageVariants","exit","y","enter","backVariants","x","delay","About","initial","img","variants","src","alt","Contact","Error","Navigation","to","App","path","component","Home","exact","Component","rootElement","document","getElementById","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.76935355.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\"This web app is being served cache-first by a service \");\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {\r\n      \"Service-Worker\": \"script\"\r\n    }\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const Example = () => {\r\n  const mystyle = {\r\n    color: \"white\",\r\n    backgroundColor: \"DodgerBlue\",\r\n    padding: \"10px\",\r\n    fontFamily: \"Arial\",\r\n    height: \"100px\",\r\n    width: \"100px\",\r\n    display: \"inlineBlock\"\r\n  };\r\n  return (\r\n    <motion.div\r\n      style={mystyle}\r\n      className=\"yooo\"\r\n      drag\r\n      dragConstraints={{\r\n        top: -50,\r\n        left: -50,\r\n        right: 50,\r\n        bottom: 50\r\n      }}\r\n      animate={{\r\n        scale: [1, 2, 2, 1, 1],\r\n        rotate: [0, 0, 270, 270, 0],\r\n        borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"]\r\n      }}\r\n      transition={{\r\n        duration: 2,\r\n        ease: \"easeInOut\",\r\n        times: [0, 0.2, 0.7, 0.8, 1],\r\n        loop: Infinity,\r\n        repeatDelay: 1\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Example } from \"./Example\";\r\nconst home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <p>Home page body content</p>\r\n      <motion.div animate={{ opacity: 1 }} />\r\n      <motion.div\r\n        animate={{\r\n          scale: [1, 2, 2, 1, 1],\r\n          rotate: [0, 0, 270, 270, 0],\r\n          borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"]\r\n        }}\r\n      />\r\n      <Example key={3} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nconst transition = {\r\n  duration: 1,\r\n  ease: [0.43, 0.13, 0.23, 0.96]\r\n};\r\n\r\nconst imageVariants = {\r\n  exit: { y: \"50%\", opacity: 0, transition },\r\n  enter: {\r\n    y: \"0%\",\r\n    opacity: 1,\r\n    transition\r\n  }\r\n};\r\n\r\nconst backVariants = {\r\n  exit: { x: 100, opacity: 0, transition },\r\n  enter: { x: 0, opacity: 1, transition: { delay: 1, ...transition } }\r\n};\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About US</h1>\r\n      <p>About US page body contentYo baby noooo way</p>\r\n      <motion.div className=\"single\" initial=\"exit\" animate=\"enter\" exit=\"exit\">\r\n        <motion.img\r\n          variants={imageVariants}\r\n          src=\"https://images.squarespace-cdn.com/content/5b475b2c50a54f54f9b4e1dc/1532639550193-UH2J0SYQU4AQVIWNAH5A/DSCF3338.jpg?content-type=image%2Fjpeg\"\r\n          alt=\"The Barbican\"\r\n        />\r\n        <motion.div className=\"back\" variants={backVariants}>\r\n          bacj\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <h1>Contact US</h1>\r\n      <p>Contact US page body content</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div>\r\n      <p>Error: Page does not exist!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/\">Home</NavLink>\r\n      <NavLink to=\"/about\">About</NavLink>\r\n      <NavLink to=\"/contact\">Contact</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import \"./styles.css\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Error from \"./components/Error\";\nimport Navigation from \"./components/Navigation\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route component={Error} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceworker\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\nserviceWorker.register();\n"],"sourceRoot":""}